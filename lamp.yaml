esphome:
  name: lamp
  platform: ESP8266
  board: esp01_1m
  esp8266_restore_from_flash: no

  on_loop:
    - if:
        condition:
          and:
            - api.connected
            - binary_sensor.is_on: api_recovery
        then:
          - light.turn_off: lamp
          - homeassistant.service:
              service: esphome.lamp_switch_recovery_off

wifi:
  ssid: !secret ParkisSSID
  password: !secret ParkisPassword

  ap:
    ssid: Lamp
    password: !secret AccessPointPassword
  
  manual_ip:
    static_ip: 192.168.1.87
    subnet: 255.255.255.0
    gateway: 192.168.1.1
    
captive_portal:
    
api:
  services:
    - service: toggle
      then:
        if:
          condition:
            light.is_on: lamp
          then:
            light.turn_off: lamp
          else:
            light.turn_on:
              id: lamp
              brightness: 1.0
              white: 1.0

logger:

ota:

my9231:
  data_pin: GPIO12
  clock_pin: GPIO14
  num_channels: 6
  num_chips: 2

output:
  - platform: my9231
    id: output_blue
    channel: 0
  - platform: my9231
    id: output_red
    channel: 1
  - platform: my9231
    id: output_green
    channel: 2
  - platform: my9231
    id: output_warm_white
    channel: 4
  - platform: my9231
    id: output_cold_white
    channel: 5

light:
  - platform: rgb
    name: lamp_rgb
    red: output_red
    green: output_green
    blue: output_blue
    restore_mode: ALWAYS_OFF
    id: lamp_rgb
    on_turn_on:
      light.turn_off: lamp
    
  - platform: cwww
    name: lamp
    cold_white: output_cold_white
    warm_white: output_warm_white
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2800 K
    restore_mode: ALWAYS_ON
    id: lamp
    on_turn_on:
      light.turn_off: lamp_rgb
    
binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.api_recovery
    id: api_recovery
  - platform: homeassistant
    entity_id: binary_sensor.lamp_dim_toggle
    id: dim_toggle
  - platform: homeassistant
    entity_id: binary_sensor.lamp_dimmer
    id: lamp_dimmer
    on_state:
      - if:
          condition:
            and:
              - binary_sensor.is_on: dim_toggle
              - lambda: |-
                  return (id(lamp).current_values.get_brightness() == 1);
          then:
            lambda: |-
              id(dim_toggle).publish_state(false);
      - delay: 0.5s
      - if:
          condition:
            and:
              - api.connected
              - binary_sensor.is_on: lamp_dimmer
          then:
            if:
              condition:
                binary_sensor.is_on: dim_toggle
              then:
                while:
                  condition:
                    and:
                      - api.connected
                      - binary_sensor.is_on: lamp_dimmer
                  then:
                    - light.turn_on:
                        id: lamp
                        white: !lambda |-
                          return (id(lamp).current_values.get_brightness());
                    - light.dim_relative:
                        id: lamp
                        relative_brightness: 2%
                        transition_length: 0.1s
                    - delay: 0.1s
              else:
                while:
                  condition:
                    and:
                      - api.connected
                      - binary_sensor.is_on: lamp_dimmer
                  then:
                    - light.turn_on:
                        id: lamp
                        white: !lambda |-
                          return (id(lamp).current_values.get_brightness());
                    - light.dim_relative:
                        id: lamp
                        relative_brightness: -2%
                        transition_length: 0.1s
                    - delay: 0.1s
    